name: Go Release Binaries

on:
  push:
    branches:
    - main

  jobs:
    build:
      name: Build Release Binaries
      runs-on: ubuntu-latest
      strategy:
        matrix:
	  goos: [linux, windows, darwin]
          goarch: [amd64, arm64]
          exclude:
	  - goos: windows
            goarch: arm64
      steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Build
        working-directory: ./app
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
	run: |
	  if [ "${{ matrix.goos }}" = "windows" ]; then
	    BINARY_NAME="myapp-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
	  else
	    BINARY_NAME="myapp-${{ matrix.goos }}-${{ matrix.goarch }}"
	  fi
          
	  # Compila o c√≥digo
	  go build -v -o "${BINARY_NAME}" ./...

      - name: Upload Binary as Artifact
	uses: actions/upload-artifact@v4
	with:
	  name: binary-${{ matrix.goos }}-${{ matrix.goarch }}
	  path: app/myapp-${{ matrix.goos }}-${{ matrix.goarch }}* 
   
    package:
      name: Package Release Binaries
      runs-on: ubuntu-latest
      needs: build 

      steps:
        - name: Create dist directory
	  run: mkdir dist

	- name: Download all binary artifacts
	  uses: actions/download-artifact@v4
          with:
	    path: dist

	- name: Organize files in dist
	  run: |
	    cd dist
            find . -mindepth 2 -type f -exec mv {} . \;
            find . -mindepth 1 -type d -empty -delete
            ls -l

	- name: Upload dist folder as a final artifact
	  uses: actions/upload-artifact@v4
	  with:
            name: release-dist
            path: dist/ 
